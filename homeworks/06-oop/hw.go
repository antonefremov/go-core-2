package geom

import (
	"fmt"
	"math"
)

// Исправленные недостатки:
// 0. Мне не понравилось, что это объект. Ведь у нас просто служебный модуль без внутреннего состояния. 
//    Поэтому переписал на процедурную модель.
// 1. Убрал тип Geom и переименовал пакет с hw на geom.
// 2. Изменил имя метода с CalculateDistance на Distance.
// 2. Добавил пояснительные комментарии к методу (пригодятся в будущем для генерации документации).
// 3. Убрал явное именование возвращаемого аргумента.
// 4. Добавил тип error второго возвращаемого аргумента.
// 5. Модуль не должен заниматься печатью, поэтому я убрал Println и добавил Errorf
//	  с сообщением об ошибке с маленькой буквы (хотя по умолчанию все же лучше использовать английский).
// 6. Убрал ветку else, ведь positive execution path желательно не должен иметь отступов.
// 7. Вместо присвоения временной переменной distance сразу же делаю return.
// 8. Вынес math.Sqrt и math.Pow в отдельные функции, чтобы сделать запись формулы более читаемой.
// 9. Переписал тесты, чтобы сделать 100% покрытия.

// Distance calculates distance between two points
func Distance(X1, Y1, X2, Y2 float64) (float64, error) {

	// По условиям задачи, координаты не могут быть меньше 0.
	if X1 < 0 || X2 < 0 || Y1 < 0 || Y2 < 0 {
		return -1, fmt.Errorf("%s", "координаты не могут быть меньше нуля")
	}

	// возврат расстояния между точками
	return sqrt(pow(X2-X1, 2) + pow(Y2-Y1, 2)), nil
}

func sqrt(arg float64) float64 {
	return math.Sqrt(arg)
}

func pow(arg, p float64) float64 {
	return math.Pow(arg, p)
}
